{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nfunction RegisterComponent_mat_error_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"\\nUsername is required\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"\\nUsername must be at least 3 characters\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"\\nEmail is required\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"\\nPlease enter a valid email\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"\\nPassword is required\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"\\nPassword must be at least 6 characters\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"\\nPlease confirm your password\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"\\nPasswords don't match\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_spinner_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 19);\n  }\n}\nfunction RegisterComponent_span_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Create Account\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(fb, authService, router, snackBar) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.isLoading = false;\n    this.registerForm = this.fb.group({\n      firstName: [''],\n      lastName: [''],\n      username: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n  }\n  ngOnInit() {\n    // Redirect if already logged in\n    this.authService.isLoggedIn$.subscribe(isLoggedIn => {\n      if (isLoggedIn) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n  passwordMatchValidator(form) {\n    const password = form.get('password');\n    const confirmPassword = form.get('confirmPassword');\n    if (password && confirmPassword && password.value !== confirmPassword.value) {\n      return {\n        passwordMismatch: true\n      };\n    }\n    return null;\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.isLoading = true;\n      const formValue = this.registerForm.value;\n      const registerData = {\n        username: formValue.username,\n        email: formValue.email,\n        password: formValue.password,\n        firstName: formValue.firstName,\n        lastName: formValue.lastName\n      };\n      this.authService.register(registerData).subscribe({\n        next: response => {\n          this.isLoading = false;\n          this.snackBar.open('Registration successful! Please login.', 'Close', {\n            duration: 5000,\n            panelClass: ['success-snackbar']\n          });\n          this.router.navigate(['/login']);\n        },\n        error: error => {\n          this.isLoading = false;\n          let errorMessage = 'Registration failed. Please try again.';\n          if (error.status === 400) {\n            errorMessage = 'Username or email already exists.';\n          }\n          this.snackBar.open(errorMessage, 'Close', {\n            duration: 5000,\n            panelClass: ['error-snackbar']\n          });\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 63,\n      vars: 12,\n      consts: [[1, \"register-container\"], [1, \"register-card\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-row\"], [\"appearance\", \"outline\", 1, \"half-width\"], [\"matInput\", \"\", \"formControlName\", \"firstName\", \"placeholder\", \"Enter first name\"], [\"matSuffix\", \"\"], [\"matInput\", \"\", \"formControlName\", \"lastName\", \"placeholder\", \"Enter last name\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"username\", \"placeholder\", \"Choose a username\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter your email\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Choose a password\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"Confirm your password\"], [1, \"button-container\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"full-width\", 3, \"disabled\"], [\"diameter\", \"20\", 4, \"ngIf\"], [1, \"login-link\"], [\"mat-button\", \"\", \"color\", \"accent\", \"routerLink\", \"/login\"], [\"diameter\", \"20\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"mat-card-title\")(4, \"mat-icon\");\n          i0.ɵɵtext(5, \"person_add\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(6, \"\\nCreate New Account\\n\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"mat-card-content\")(8, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_8_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(9, \"div\", 3)(10, \"mat-form-field\", 4)(11, \"mat-label\");\n          i0.ɵɵtext(12, \"First Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 5);\n          i0.ɵɵelementStart(14, \"mat-icon\", 6);\n          i0.ɵɵtext(15, \"person\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"mat-form-field\", 4)(17, \"mat-label\");\n          i0.ɵɵtext(18, \"Last Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 7);\n          i0.ɵɵelementStart(20, \"mat-icon\", 6);\n          i0.ɵɵtext(21, \"person\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(22, \"mat-form-field\", 8)(23, \"mat-label\");\n          i0.ɵɵtext(24, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"input\", 9);\n          i0.ɵɵelementStart(26, \"mat-icon\", 6);\n          i0.ɵɵtext(27, \"account_circle\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(28, RegisterComponent_mat_error_28_Template, 2, 0, \"mat-error\", 10)(29, RegisterComponent_mat_error_29_Template, 2, 0, \"mat-error\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"mat-form-field\", 8)(31, \"mat-label\");\n          i0.ɵɵtext(32, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(33, \"input\", 11);\n          i0.ɵɵelementStart(34, \"mat-icon\", 6);\n          i0.ɵɵtext(35, \"email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(36, RegisterComponent_mat_error_36_Template, 2, 0, \"mat-error\", 10)(37, RegisterComponent_mat_error_37_Template, 2, 0, \"mat-error\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"mat-form-field\", 8)(39, \"mat-label\");\n          i0.ɵɵtext(40, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(41, \"input\", 12);\n          i0.ɵɵelementStart(42, \"mat-icon\", 6);\n          i0.ɵɵtext(43, \"lock\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(44, RegisterComponent_mat_error_44_Template, 2, 0, \"mat-error\", 10)(45, RegisterComponent_mat_error_45_Template, 2, 0, \"mat-error\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(46, \"mat-form-field\", 8)(47, \"mat-label\");\n          i0.ɵɵtext(48, \"Confirm Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(49, \"input\", 13);\n          i0.ɵɵelementStart(50, \"mat-icon\", 6);\n          i0.ɵɵtext(51, \"lock\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(52, RegisterComponent_mat_error_52_Template, 2, 0, \"mat-error\", 10)(53, RegisterComponent_mat_error_53_Template, 2, 0, \"mat-error\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(54, \"div\", 14)(55, \"button\", 15);\n          i0.ɵɵtemplate(56, RegisterComponent_mat_spinner_56_Template, 1, 0, \"mat-spinner\", 16)(57, RegisterComponent_span_57_Template, 2, 0, \"span\", 10);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(58, \"mat-card-actions\")(59, \"p\", 17);\n          i0.ɵɵtext(60, \"\\nAlready have an account?\\n\");\n          i0.ɵɵelementStart(61, \"a\", 18);\n          i0.ɵɵtext(62, \"Login here\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n          i0.ɵɵadvance(20);\n          i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_1_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_2_0.hasError(\"minlength\"));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_3_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_4_0.hasError(\"email\"));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_5_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_6_0.hasError(\"minlength\"));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", (tmp_7_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_7_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"passwordMismatch\"));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid || ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        }\n      },\n      styles: [\".register-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  min-height: calc(100vh - 120px);\\n  padding: 20px;\\n}\\n\\n.register-card[_ngcontent-%COMP%] {\\n  max-width: 500px;\\n  width: 100%;\\n  padding: 20px;\\n}\\n\\n.register-card[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  text-align: center;\\n  justify-content: center;\\n}\\n\\n.form-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 16px;\\n}\\n\\n.full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 16px;\\n}\\n\\n.half-width[_ngcontent-%COMP%] {\\n  flex: 1;\\n  margin-bottom: 16px;\\n}\\n\\n.button-container[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\n.login-link[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin: 0;\\n  padding: 16px;\\n}\\n\\nmat-spinner[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsK0JBQUE7RUFDTSxhQUFBO0FBQU47O0FBR0k7RUFDRSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0FBQU47O0FBR0k7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxRQUFBO0VBQ0Esa0JBQUE7RUFDQSx1QkFBQTtBQUFOOztBQUdJO0VBQ0UsYUFBQTtFQUNBLFNBQUE7QUFBTjs7QUFHSTtFQUNFLFdBQUE7RUFDQSxtQkFBQTtBQUFOOztBQUdJO0VBQ0UsT0FBQTtFQUNBLG1CQUFBO0FBQU47O0FBR0k7RUFDRSxnQkFBQTtBQUFOOztBQUdJO0VBQ0Usa0JBQUE7RUFDQSxTQUFBO0VBQ0EsYUFBQTtBQUFOOztBQUdJO0VBQ0UsaUJBQUE7QUFBTiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQudHMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5yZWdpc3Rlci1jb250YWluZXIge1xuZGlzcGxheTogZmxleDtcbmp1c3RpZnktY29udGVudDogY2VudGVyO1xuYWxpZ24taXRlbXM6IGNlbnRlcjtcbm1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSAxMjBweCk7XG4gICAgICBwYWRkaW5nOiAyMHB4O1xuICAgIH1cblxuICAgIC5yZWdpc3Rlci1jYXJkIHtcbiAgICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgfVxuXG4gICAgLnJlZ2lzdGVyLWNhcmQgbWF0LWNhcmQtdGl0bGUge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBnYXA6IDhweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIH1cblxuICAgIC5mb3JtLXJvdyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZ2FwOiAxNnB4O1xuICAgIH1cblxuICAgIC5mdWxsLXdpZHRoIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgICB9XG5cbiAgICAuaGFsZi13aWR0aCB7XG4gICAgICBmbGV4OiAxO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgICB9XG5cbiAgICAuYnV0dG9uLWNvbnRhaW5lciB7XG4gICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgIH1cblxuICAgIC5sb2dpbi1saW5rIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgfVxuXG4gICAgbWF0LXNwaW5uZXIge1xuICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICAgfVxuICAiXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDQSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLCtCQUFBO0VBQ00sYUFBQTtBQUFOOztBQUdJO0VBQ0UsZ0JBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtBQUFOOztBQUdJO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsUUFBQTtFQUNBLGtCQUFBO0VBQ0EsdUJBQUE7QUFBTjs7QUFHSTtFQUNFLGFBQUE7RUFDQSxTQUFBO0FBQU47O0FBR0k7RUFDRSxXQUFBO0VBQ0EsbUJBQUE7QUFBTjs7QUFHSTtFQUNFLE9BQUE7RUFDQSxtQkFBQTtBQUFOOztBQUdJO0VBQ0UsZ0JBQUE7QUFBTjs7QUFHSTtFQUNFLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLGFBQUE7QUFBTjs7QUFHSTtFQUNFLGlCQUFBO0FBQU47QUFDQSx3eERBQXd4RCIsInNvdXJjZXNDb250ZW50IjpbIlxuLnJlZ2lzdGVyLWNvbnRhaW5lciB7XG5kaXNwbGF5OiBmbGV4O1xuanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5hbGlnbi1pdGVtczogY2VudGVyO1xubWluLWhlaWdodDogY2FsYygxMDB2aCAtIDEyMHB4KTtcbiAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgfVxuXG4gICAgLnJlZ2lzdGVyLWNhcmQge1xuICAgICAgbWF4LXdpZHRoOiA1MDBweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgcGFkZGluZzogMjBweDtcbiAgICB9XG5cbiAgICAucmVnaXN0ZXItY2FyZCBtYXQtY2FyZC10aXRsZSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGdhcDogOHB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuXG4gICAgLmZvcm0tcm93IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBnYXA6IDE2cHg7XG4gICAgfVxuXG4gICAgLmZ1bGwtd2lkdGgge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIH1cblxuICAgIC5oYWxmLXdpZHRoIHtcbiAgICAgIGZsZXg6IDE7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIH1cblxuICAgIC5idXR0b24tY29udGFpbmVyIHtcbiAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgfVxuXG4gICAgLmxvZ2luLWxpbmsge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMTZweDtcbiAgICB9XG5cbiAgICBtYXQtc3Bpbm5lciB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","RegisterComponent","constructor","fb","authService","router","snackBar","isLoading","registerForm","group","firstName","lastName","username","required","minLength","email","password","confirmPassword","validators","passwordMatchValidator","ngOnInit","isLoggedIn$","subscribe","isLoggedIn","navigate","form","get","value","passwordMismatch","onSubmit","valid","formValue","registerData","register","next","response","open","duration","panelClass","error","errorMessage","status","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","i4","MatSnackBar","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_8_listener","ɵɵtemplate","RegisterComponent_mat_error_28_Template","RegisterComponent_mat_error_29_Template","RegisterComponent_mat_error_36_Template","RegisterComponent_mat_error_37_Template","RegisterComponent_mat_error_44_Template","RegisterComponent_mat_error_45_Template","RegisterComponent_mat_error_52_Template","RegisterComponent_mat_error_53_Template","RegisterComponent_mat_spinner_56_Template","RegisterComponent_span_57_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","hasError","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","invalid"],"sources":["C:\\Development\\user-management-frontend\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\nselector: 'app-register',\r\ntemplate: `\r\n<div class=\"register-container\">\r\n<mat-card class=\"register-card\">\r\n<mat-card-header>\r\n<mat-card-title>\r\n<mat-icon>person_add</mat-icon>\r\nCreate New Account\r\n</mat-card-title>\r\n</mat-card-header>\r\n\r\n<mat-card-content>\r\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n<div class=\"form-row\">\r\n<mat-form-field appearance=\"outline\" class=\"half-width\">\r\n<mat-label>First Name</mat-label>\r\n<input matInput formControlName=\"firstName\" placeholder=\"Enter first name\">\r\n<mat-icon matSuffix>person</mat-icon>\r\n</mat-form-field>\r\n\r\n<mat-form-field appearance=\"outline\" class=\"half-width\">\r\n<mat-label>Last Name</mat-label>\r\n<input matInput formControlName=\"lastName\" placeholder=\"Enter last name\">\r\n<mat-icon matSuffix>person</mat-icon>\r\n</mat-form-field>\r\n</div>\r\n\r\n<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n<mat-label>Username</mat-label>\r\n<input matInput formControlName=\"username\" placeholder=\"Choose a username\">\r\n<mat-icon matSuffix>account_circle</mat-icon>\r\n<mat-error *ngIf=\"registerForm.get('username')?.hasError('required')\">\r\nUsername is required\r\n</mat-error>\r\n<mat-error *ngIf=\"registerForm.get('username')?.hasError('minlength')\">\r\nUsername must be at least 3 characters\r\n</mat-error>\r\n</mat-form-field>\r\n\r\n<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n<mat-label>Email</mat-label>\r\n<input matInput type=\"email\" formControlName=\"email\" placeholder=\"Enter your email\">\r\n<mat-icon matSuffix>email</mat-icon>\r\n<mat-error *ngIf=\"registerForm.get('email')?.hasError('required')\">\r\nEmail is required\r\n</mat-error>\r\n<mat-error *ngIf=\"registerForm.get('email')?.hasError('email')\">\r\nPlease enter a valid email\r\n</mat-error>\r\n</mat-form-field>\r\n\r\n<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n<mat-label>Password</mat-label>\r\n<input matInput type=\"password\" formControlName=\"password\" placeholder=\"Choose a password\">\r\n<mat-icon matSuffix>lock</mat-icon>\r\n<mat-error *ngIf=\"registerForm.get('password')?.hasError('required')\">\r\nPassword is required\r\n</mat-error>\r\n<mat-error *ngIf=\"registerForm.get('password')?.hasError('minlength')\">\r\nPassword must be at least 6 characters\r\n</mat-error>\r\n</mat-form-field>\r\n\r\n<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n<mat-label>Confirm Password</mat-label>\r\n<input matInput type=\"password\" formControlName=\"confirmPassword\" placeholder=\"Confirm your password\">\r\n<mat-icon matSuffix>lock</mat-icon>\r\n<mat-error *ngIf=\"registerForm.get('confirmPassword')?.hasError('required')\">\r\nPlease confirm your password\r\n</mat-error>\r\n<mat-error *ngIf=\"registerForm.hasError('passwordMismatch')\">\r\nPasswords don't match\r\n</mat-error>\r\n</mat-form-field>\r\n\r\n<div class=\"button-container\">\r\n<button mat-raised-button color=\"primary\" type=\"submit\"\r\n[disabled]=\"registerForm.invalid || isLoading\" class=\"full-width\">\r\n<mat-spinner *ngIf=\"isLoading\" diameter=\"20\"></mat-spinner>\r\n<span *ngIf=\"!isLoading\">Create Account</span>\r\n</button>\r\n</div>\r\n</form>\r\n</mat-card-content>\r\n\r\n<mat-card-actions>\r\n<p class=\"login-link\">\r\nAlready have an account?\r\n<a mat-button color=\"accent\" routerLink=\"/login\">Login here</a>\r\n</p>\r\n</mat-card-actions>\r\n</mat-card>\r\n</div>\r\n`,\r\nstyles: [`\r\n.register-container {\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nmin-height: calc(100vh - 120px);\r\n      padding: 20px;\r\n    }\r\n\r\n    .register-card {\r\n      max-width: 500px;\r\n      width: 100%;\r\n      padding: 20px;\r\n    }\r\n\r\n    .register-card mat-card-title {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      text-align: center;\r\n      justify-content: center;\r\n    }\r\n\r\n    .form-row {\r\n      display: flex;\r\n      gap: 16px;\r\n    }\r\n\r\n    .full-width {\r\n      width: 100%;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .half-width {\r\n      flex: 1;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .button-container {\r\n      margin-top: 20px;\r\n    }\r\n\r\n    .login-link {\r\n      text-align: center;\r\n      margin: 0;\r\n      padding: 16px;\r\n    }\r\n\r\n    mat-spinner {\r\n      margin-right: 8px;\r\n    }\r\n  `]\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.registerForm = this.fb.group({\r\n      firstName: [''],\r\n      lastName: [''],\r\n      username: ['', [Validators.required, Validators.minLength(3)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required]]\r\n    }, { validators: this.passwordMatchValidator });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Redirect if already logged in\r\n    this.authService.isLoggedIn$.subscribe(isLoggedIn => {\r\n      if (isLoggedIn) {\r\n        this.router.navigate(['/dashboard']);\r\n      }\r\n    });\r\n  }\r\n\r\n  passwordMatchValidator(form: FormGroup) {\r\n    const password = form.get('password');\r\n    const confirmPassword = form.get('confirmPassword');\r\n\r\n    if (password && confirmPassword && password.value !== confirmPassword.value) {\r\n      return { passwordMismatch: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.registerForm.valid) {\r\n      this.isLoading = true;\r\n\r\n      const formValue = this.registerForm.value;\r\n      const registerData = {\r\n        username: formValue.username,\r\n        email: formValue.email,\r\n        password: formValue.password,\r\n        firstName: formValue.firstName,\r\n        lastName: formValue.lastName\r\n      };\r\n\r\n      this.authService.register(registerData).subscribe({\r\n        next: (response) => {\r\n          this.isLoading = false;\r\n          this.snackBar.open('Registration successful! Please login.', 'Close', {\r\n            duration: 5000,\r\n            panelClass: ['success-snackbar']\r\n          });\r\n          this.router.navigate(['/login']);\r\n        },\r\n        error: (error) => {\r\n          this.isLoading = false;\r\n          let errorMessage = 'Registration failed. Please try again.';\r\n\r\n          if (error.status === 400) {\r\n            errorMessage = 'Username or email already exists.';\r\n          }\r\n\r\n          this.snackBar.open(errorMessage, 'Close', {\r\n            duration: 5000,\r\n            panelClass: ['error-snackbar']\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}